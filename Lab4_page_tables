
Lab4-2: A kernel page table per process

xv6原来的系统实现是kernel维护一个唯一的内核页表，用户进程使用该内核页表。本实验的目的是为了给每一个进程都增加一个各自的内核页表。

# proc.c
procinit(void)这个函数用于在boot的时候对已有用户进程并进行初始化，主要是申请对应的内核栈。但是在改为进程自身拥有独立的内核页表后就不需要向原kernel的页表申请内核栈了，而是将这部分代码放到allocproc(void)中。因为allocproc(void)用于每个用户进程向系统申请一个用户页表，我们需要在这个函数中同样加入内核页表的申请。
